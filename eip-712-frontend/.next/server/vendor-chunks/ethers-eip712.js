"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ethers-eip712";
exports.ids = ["vendor-chunks/ethers-eip712"];
exports.modules = {

/***/ "(ssr)/./node_modules/ethers-eip712/dist/index.es.js":
/*!*****************************************************!*\
  !*** ./node_modules/ethers-eip712/dist/index.es.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypedDataUtils: () => (/* binding */ TypedDataUtils),\n/* harmony export */   buildTypedData: () => (/* binding */ buildTypedData),\n/* harmony export */   domainType: () => (/* binding */ domainType),\n/* harmony export */   encodeTypedDataDigest: () => (/* binding */ encodeTypedDataDigest)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/solidity/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/abi/lib.esm/abi-coder.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/strings/lib.esm/utf8.js\");\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar TypedDataUtils = {\r\n    encodeDigest: function (typedData) {\r\n        var eip191Header = ethers__WEBPACK_IMPORTED_MODULE_0__.arrayify('0x1901');\r\n        var domainHash = TypedDataUtils.hashStruct(typedData, 'EIP712Domain', typedData.domain);\r\n        var messageHash = TypedDataUtils.hashStruct(typedData, typedData.primaryType, typedData.message);\r\n        var pack = ethers__WEBPACK_IMPORTED_MODULE_1__.pack(['bytes', 'bytes32', 'bytes32'], [eip191Header, zeroPad(domainHash, 32), zeroPad(messageHash, 32)]);\r\n        var hashPack = ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(pack);\r\n        return ethers__WEBPACK_IMPORTED_MODULE_0__.arrayify(hashPack);\r\n    },\r\n    encodeData: function (typedData, primaryType, data) {\r\n        var types = typedData.types;\r\n        var args = types[primaryType];\r\n        if (!args || args.length === 0) {\r\n            throw new Error(\"TypedDataUtils: \" + typedData.primaryType + \" type is not unknown\");\r\n        }\r\n        var abiCoder = new ethers__WEBPACK_IMPORTED_MODULE_3__.AbiCoder();\r\n        var abiTypes = [];\r\n        var abiValues = [];\r\n        var typeHash = TypedDataUtils.typeHash(typedData.types, primaryType);\r\n        abiTypes.push('bytes32');\r\n        abiValues.push(zeroPad(typeHash, 32));\r\n        var encodeField = function (name, type, value) {\r\n            if (types[type] !== undefined) {\r\n                return ['bytes32', ethers__WEBPACK_IMPORTED_MODULE_0__.arrayify(ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(TypedDataUtils.encodeData(typedData, type, value)))];\r\n            }\r\n            if (type === 'bytes' || type === 'string') {\r\n                var v = void 0;\r\n                if (type === 'string') {\r\n                    v = ethers__WEBPACK_IMPORTED_MODULE_4__.toUtf8Bytes(value);\r\n                }\r\n                else {\r\n                    v = ethers__WEBPACK_IMPORTED_MODULE_0__.arrayify(value);\r\n                }\r\n                return ['bytes32', ethers__WEBPACK_IMPORTED_MODULE_0__.arrayify(ethers__WEBPACK_IMPORTED_MODULE_0__.hexZeroPad(ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(v), 32))];\r\n            }\r\n            else if (type.lastIndexOf('[') > 0) {\r\n                var t_1 = type.slice(0, type.lastIndexOf('['));\r\n                var v = value.map(function (item) { return encodeField(name, t_1, item); });\r\n                return ['bytes32', ethers__WEBPACK_IMPORTED_MODULE_0__.arrayify(ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(ethers__WEBPACK_IMPORTED_MODULE_0__.arrayify(abiCoder.encode(v.map(function (_a) {\r\n                        var tt = _a[0];\r\n                        return tt;\r\n                    }), v.map(function (_a) {\r\n                        var vv = _a[1];\r\n                        return vv;\r\n                    })))))\r\n                ];\r\n            }\r\n            else {\r\n                return [type, value];\r\n            }\r\n        };\r\n        for (var _i = 0, args_1 = args; _i < args_1.length; _i++) {\r\n            var field = args_1[_i];\r\n            var _a = encodeField(field.name, field.type, data[field.name]), type = _a[0], value = _a[1];\r\n            abiTypes.push(type);\r\n            abiValues.push(value);\r\n        }\r\n        return ethers__WEBPACK_IMPORTED_MODULE_0__.arrayify(abiCoder.encode(abiTypes, abiValues));\r\n    },\r\n    hashStruct: function (typedData, primaryType, data) {\r\n        return ethers__WEBPACK_IMPORTED_MODULE_0__.arrayify(ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(TypedDataUtils.encodeData(typedData, primaryType, data)));\r\n    },\r\n    typeHash: function (typedDataTypes, primaryType) {\r\n        return ethers__WEBPACK_IMPORTED_MODULE_0__.arrayify(ethers__WEBPACK_IMPORTED_MODULE_2__.keccak256(ethers__WEBPACK_IMPORTED_MODULE_4__.toUtf8Bytes(TypedDataUtils.encodeType(typedDataTypes, primaryType))));\r\n    },\r\n    encodeType: function (typedDataTypes, primaryType) {\r\n        var args = typedDataTypes[primaryType];\r\n        if (!args || args.length === 0) {\r\n            throw new Error(\"TypedDataUtils: \" + primaryType + \" type is not defined\");\r\n        }\r\n        var subTypes = [];\r\n        var s = primaryType + '(';\r\n        for (var i = 0; i < args.length; i++) {\r\n            var arg = args[i];\r\n            var arrayArg = arg.type.indexOf('[');\r\n            var argType = arrayArg < 0 ? arg.type : arg.type.slice(0, arrayArg);\r\n            if (typedDataTypes[argType] && typedDataTypes[argType].length > 0) {\r\n                var set = false;\r\n                for (var x = 0; x < subTypes.length; x++) {\r\n                    if (subTypes[x] === argType) {\r\n                        set = true;\r\n                    }\r\n                }\r\n                if (!set) {\r\n                    subTypes.push(argType);\r\n                }\r\n            }\r\n            s += arg.type + ' ' + arg.name;\r\n            if (i < args.length - 1) {\r\n                s += ',';\r\n            }\r\n        }\r\n        s += ')';\r\n        subTypes.sort();\r\n        for (var i = 0; i < subTypes.length; i++) {\r\n            var subEncodeType = TypedDataUtils.encodeType(typedDataTypes, subTypes[i]);\r\n            s += subEncodeType;\r\n        }\r\n        return s;\r\n    },\r\n    domainType: function (domain) {\r\n        var type = [];\r\n        if (domain.name) {\r\n            type.push({ name: 'name', type: 'string' });\r\n        }\r\n        if (domain.version) {\r\n            type.push({ name: 'version', type: 'string' });\r\n        }\r\n        if (domain.chainId) {\r\n            type.push({ name: 'chainId', type: 'uint256' });\r\n        }\r\n        if (domain.verifyingContract) {\r\n            type.push({ name: 'verifyingContract', type: 'address' });\r\n        }\r\n        if (domain.salt) {\r\n            type.push({ name: 'salt', type: 'bytes32' });\r\n        }\r\n        return type;\r\n    },\r\n    buildTypedData: function (domain, messageTypes, primaryType, message) {\r\n        var domainType = TypedDataUtils.domainType(domain);\r\n        var typedData = {\r\n            domain: domain,\r\n            types: __assign({ 'EIP712Domain': domainType }, messageTypes),\r\n            primaryType: primaryType,\r\n            message: message\r\n        };\r\n        return typedData;\r\n    }\r\n};\r\nvar encodeTypedDataDigest = function (typedData) {\r\n    return TypedDataUtils.encodeDigest(typedData);\r\n};\r\nvar buildTypedData = function (domain, messageTypes, primaryType, message) {\r\n    return TypedDataUtils.buildTypedData(domain, messageTypes, primaryType, message);\r\n};\r\nvar domainType = function (domain) {\r\n    return TypedDataUtils.domainType(domain);\r\n};\r\n// zeroPad is implemented as a compat layer between ethers v4 and ethers v5\r\nvar zeroPad = function (value, length) {\r\n    return ethers__WEBPACK_IMPORTED_MODULE_0__.arrayify(ethers__WEBPACK_IMPORTED_MODULE_0__.hexZeroPad(ethers__WEBPACK_IMPORTED_MODULE_0__.hexlify(value), length));\r\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethers-eip712/dist/index.es.js\n");

/***/ })

};
;